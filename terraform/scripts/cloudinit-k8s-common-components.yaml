#cloud-config
#
# Configure the common requirements for K8s instances (Control Plane and Worker Nodes)
#
groups:
  - ubuntu: [root,sys]
  - sysadmin

users:
  - default
  - name: sysadmin
    gecos: SysAdmin
    shell: /bin/bash
    primary_group: sysadmin
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    groups: sudo
    lock_passwd: false
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDI7mUmoOOK4YQzbjiufZbPAjjLiAz4bXt8NL+ZlnBx3fZhUPT3Yg3SPuvSs298z1v02zT/CeSOkWX/QPA1297/GTYSnGrNvBiCAaWPqBpCIKzdWvvT8cVqWwDK2hgS8aaY69yE8UF/fjARfnyb85kmgIdiLYAi34NmYiS4x+NHrVOLTW+MDRz2yeOc80+refSZ0Rwl3sFQjDTLizhGuv8y5a2/l/DSbSFaXu/mMj+Vde1bt5/1b7beXSqXNeF6MNyiGkssQ6KhpElaUPN0OGL0T4ibJGJrzMlXKPBJMHWy0DW70D81Jqchilo35wT3Ad0NVoc9iH6s5oaBMM9mAZO4uvcQqZxog/eQSPe787zDeMfSxbDPNQOF6XRCEIRjbX3jAdlBh4P/3RLldt8dKTcPxI+Li1SBDKbEYSB1Zdfxs0kVc3+imEGgnn1wTz/bacPcqQcPKAYrX7j7WKvaP3hPjpOfh3uyik7T7w6Fslt/oEgywTaDbQYTe/JdvskDqYDpvdP9YYrr5AXn7Cgwa2Nt8cwelaLPMtpUuq2b443c2PgX5Yr2mA+Zr+pliapJGnl3+OoXmzbr/DoXSrP2hm5arsMLCQVXl+NZTcxm06DR31NaxlQV4iu5bxtoELhdtfuL8uk8U35fuINltJjd1bRk1pxxn/MTpJW/naNsXsaYdw== admin@inbitame.com

write_files:
  - path: /etc/ssh/sshd_config
    content: |
      Port 7022
      Protocol 2
      HostKey /etc/ssh/ssh_host_rsa_key
      HostKey /etc/ssh/ssh_host_dsa_key
      HostKey /etc/ssh/ssh_host_ecdsa_key
      HostKey /etc/ssh/ssh_host_ed25519_key
      UsePrivilegeSeparation yes
      KeyRegenerationInterval 3600
      ServerKeyBits 1024
      SyslogFacility AUTH
      LogLevel INFO
      LoginGraceTime 120
      PermitRootLogin no
      StrictModes yes
      RSAAuthentication yes
      PubkeyAuthentication yes
      IgnoreRhosts yes
      RhostsRSAAuthentication no
      HostbasedAuthentication no
      PermitEmptyPasswords no
      ChallengeResponseAuthentication no
      X11Forwarding yes
      X11DisplayOffset 10
      PrintMotd no
      PrintLastLog yes
      TCPKeepAlive yes
      AcceptEnv LANG LC_*
      Subsystem sftp /usr/lib/openssh/sftp-server
      UsePAM yes
      AllowUsers sysadmin

  - path: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

  - path: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1

# You can refer to 'cat /var/log/cloud-init-output.log' file to troubleshoot command(s) execution
runcmd:
  - echo "*** Running K8s common configuration commands..."
  - restart ssh
  - apt-get update
  - apt-get upgrade -y
  - apt-get dist-upgrade -y
  - swapoff -a
  - sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
  - cat /proc/swaps
  - modprobe overlay
  - modprobe br_netfilter
  - sysctl --system
  - echo "*** Checking that 'br_netfilter' and 'overlay' modules are loaded..."
  - lsmod | grep br_netfilter
  - lsmod | grep overlay
  - sysctl net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
  - echo "*** Installing containerd, kuebelet, kubeadm and kubectl..."
  - apt-get install -y containerd apt-transport-https ca-certificates curl net-tools jq
  - mkdir -p /etc/containerd
  - mkdir -m 755 /etc/apt/keyrings
  - containerd config default > /etc/containerd/config.toml
  - sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
  - systemctl enable containerd
  - systemctl restart containerd
  - systemctl status containerd
  - curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  - echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' > /etc/apt/sources.list.d/kubernetes.list
  - apt-get update
  - export k8sVersion="1.28.1-1.1" 
  - echo "*** Installing K8s common components fixed to v${k8sVersion}" && apt-get install -y kubelet=${k8sVersion} kubeadm=${k8sVersion} kubectl=${k8sVersion}
  - echo "*** Pinning K8s common components version..."
  - apt-mark hold kubelet kubeadm kubectl
  - echo "*** K8s common components installed!"
  - containerd --version && kubelet --version && kubeadm version && kubectl version
  - echo "alias k=/usr/bin/kubectl" >> /home/sysadmin/.bashrc
  - source /home/sysadmin/.bashrc
  - echo "*** K8s common components configuration completed!"
